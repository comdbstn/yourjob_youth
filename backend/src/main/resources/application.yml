
jwt:
  secret: "your-very-long-secret-key-must-be-at-least-32-characters-long"


spring:
  datasource:
    #driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    #url: jdbc:log4jdbc:mysql://urjob-dev.cmmgsfeigtah.ap-northeast-2.rds.amazonaws.com:3306/${DB_NAME:yourjobdb}
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://urjob-dev.cmmgsfeigtah.ap-northeast-2.rds.amazonaws.com:3306/${DB_NAME:yourjobdb}
    username: yourjob
    password: rootpass
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 900000
      leak-detection-threshold: 60000
      pool-name: YourJobHikariCP
  servlet:
    multipart:
      enabled: true
      location: temp-uploads
      max-request-size: 300MB
      max-file-size: 50MB
  jpa:
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  mvc:
    static-path-pattern: /uploads/**
  web:
    resources.static-locations: file:/app/uploads/
  mail:
    host: email-smtp.us-east-1.amazonaws.com
    port: 587
    username: ${SMTP_USERNAME:your-smtp-username}
    password: ${SMTP_PASSWORD:your-smtp-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    from: no-reply@urjob.kr
  security:
    oauth2:
      client:
        registration:
          google:
            #서비스 계정
            client-id: 464036689081-2dgjkoq41uc8jpeujmsn9m19pc60d90c.apps.googleusercontent.com
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope: profile, email
          kakao:
            #서비스 계정
            client-id: acb0b6540b4f7f1e590e328ff88cb069
            client-secret: 4sZPJvNluBpGYiyrFWq7Z5amNA4hUwRJ
            redirect-uri: "https://www.urjob.kr/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile_nickname, profile_image
            #scope: profile_nickname, nickname, profile_image, account_email
            client-name: Kakao
          naver:
            #서비스 계정
            client-id: Qqa1tYvELw8X8kBAi7gR
            client-secret: fhM8swCGot
            redirect-uri: "https://www.urjob.kr/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

aws:
  s3:
    access-key: ${AWS_ACCESS_KEY_ID:your-aws-access-key}
    secret-key: ${AWS_SECRET_ACCESS_KEY:your-aws-secret-key}
    region: ap-northeast-2
    bucket-name: urjob-uploads
    #cloudfront-domain: https://urjob-uploads.s3.ap-northeast-2.amazonaws.com
    cloudfront-domain: https://cdn.urjob.kr



storage:
  use-s3: true

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.yourjob.backend.entity

server:
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:www_urjob.kr.p12
    key-store-password: urjob123
    key-store-type: PKCS12
    key-alias: tomcat

servlet:
  multipart:
    enabled: true
    location: C:\\Users\\admin\\dev
    max-request-size: 300MB
    max-file-size: 50MB

properties:
  values:
    domain: https://urjob.kr  # http에서 https로 변경

